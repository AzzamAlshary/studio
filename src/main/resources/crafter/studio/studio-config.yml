##################################################
##################################################
##       Studio Core Configuration File         ##
##################################################
##################################################

##################################################
##     Location of Override Config File         ##
##################################################
# Load override configuration files (to override what's defined here)
studio.config.overrideConfig: crafter/studio/extension/studio-config.yml

##################################################
##              Content Repository              ##
##################################################
# Absolute or relative path to repository base (all actual repositories will be under this)
studio.repo.basePath: repos
# Global repository path (automatically goes under repo-base-path)
studio.repo.globalRepoPath: global
# Sites repositories base path (automatically goes under repo-base-path)
studio.repo.sitesRepoBasePath: sites
# Sandbox git repository name under every site
studio.repo.siteSandboxPath: sandbox
# Published git repository name under every site
studio.repo.sitePublishedPath: published
# Blueprints folder name under global
studio.repo.blueprintsPath: blueprints
# Bootstrap the repository with fresh content if no repository is detected in the paths specified. Default is true.
studio.repo.bootstrapRepo: true

##################################################
##                   Database                   ##
##################################################
# Defines database DBMS platform used for crafter database. Supported values:
#   derby
#   mysql
#   postgres
#   oracle
#   sqlserver
# If value is not specified application will not startup.
studio.db.platform: derby
# Crafter CMS supports the follow databases
#   derby
#   mysql
#   postgres
#   oracle
#   sqlserver
# JDBC driver and Java class used for accessing crafter database
studio.db.driver: org.apache.derby.jdbc.EmbeddedDriver
# Username used for authentication to access crafter database.
studio.db.username: crafter
# Password used for authentication to access crafter database.
studio.db.password: crafter
# Connection string used when connecting database with JDBC driver
# Format:
# jdbc:DATABASE_PLATFORM;databaseName=DATABASE_NAME;create=true;user=DATABASE_USERNAME;password=DATABASE_USER_PASSWORD
# Note that a relative path is not suitable for a production deployment
studio.db.url: jdbc:derby:./data/derby/crafter;databaseName=crafter;create=true;user=crafter;password=crafter
# Defines initial number of database connections in database connection pool
studio.db.pool.initialConnections: 10
# Defines maximum number of active database connections in database connection pool
studio.db.pool.maxActiveConnections: 100
# Defines maximum number of idle database connections to retain in database connection pool.
studio.db.pool.maxIdleConnections: 30
# Defines minimum number of idle database connections to retain in database connection pool.
studio.db.pool.minIdleConnections: 10
# Defines maximum waiting time for a database connection to become available (value is in milliseconds).
studio.db.pool.maxWaitTime: 10000
# Turn database initializer on (value true) or off (value false).
# When initializer is turned off, system will not try to initialize database on startup.
# When system is starting for the first time initializer must be turned on.
# When database already exists, initializer can be turned off for faster startup. If database is deleted or dropped
# for any reason, initializer needs to be turned on.
studio.db.initializer.enabled: false
# Test database connections retrieved from the pool before being used (value true).
# If value is set to false database connection will not be tested before being used.
studio.db.testOnBorrow: true
# The SQL query to validate the connection for MS SQL Server.
studio.db.validationQuery.sqlserver: SELECT 1
# The SQL query to validate the connection for Postgres.
studio.db.validationQuery.postgres: SELECT 1
# The SQL query to validate the connection for MySQL.
studio.db.validationQuery.mysql: SELECT 1
# The SQL query to validate the connection for Oracle
studio.db.validationQuery.oracle: SELECT 1 FROM DUAL
# The SQL query to validate the connection for Derby
studio.db.validationQuery.derby: SELECT 1 FROM SYSIBM.SYSDUMMY1
# The SQL query to validate the connection for DB2
studio.db.validationQuery.db2: SELECT 1 FROM SYSIBM.SYSDUMMY1
# Defines the amount of time, in seconds, that connection validation will wait for a response from the database when executing a validation query.
# Use a value less than or equal to 0 for no timeout.
studio.db.validationInterval: 34000


############################################################
##                   Site Configuration                   ##
############################################################
# Location where global configuration files are stored.
studio.configuration.global.configBasePath: /configuration
# Root location where configuration for all sites is stored inside repository.
studio.configuration.site.configBasePath: /config/studio
# Location pattern where environment specific configuration for a site is stored
studio.configuration.site.environment.configBasePath: /config/studio/environment-overrides/{environment}
# Location where deployment configuration is stored for a site.
studio.configuration.site.deployment.configBasePath: /config/studio/deployment
# File name where site configuration is stored.
studio.configuration.site.generalConfigFileName: site-config.xml
# File name where configuration of user permissions mappings is stored for a site.
studio.configuration.site.permissionMappingsFileName: permission-mappings-config.xml
# File name where configuration of user role mappings is stored for a site.
studio.configuration.site.roleMappingsFileName: role-mappings-config.xml
# Defines name used for environment specific configuration. It is used for environment overrides in studio. Default value is local.
studio.configuration.site.environment: local
# File name where environment specific configuration is stored
studio.configuration.site.environment.configFileName: environment-config.xml
# File name where simple notification service configuration is stored.
studio.configuration.site.notificationsConfigFileName: notification-config.xml
# File name where custom notification service configuration is stored.
studio.configuration.site.notificationsConfigFileName.v2: workflow-messaging-config.xml
# File name where deployment endpoints configuration is stored.
studio.configuration.site.deployment.configFileName: endpoints-config.xml

########################################################
##                   Import Service                   ##
########################################################
# Defines content processor workflow assignee for import process.
studio.import.assignee: admin
# Defines content processor chain name used for processing xml content.
studio.import.xmlChainName: importContent
# Defines content processor chain name used for processing assets.
studio.import.assetChainName: assetContent

##############################################################
##                   Notification Service                   ##
##############################################################
# Turn on/off (value true/false) notifications for custom content path patterns.
studio.notification.customContentPathNotification.enabled: false
# Defines regular expression to enable notifications for custom content paths.
studio.notification.customContentPathNotificationPattern:
# Turn on/off (value true/false) custom notification service.
studio.notification.v2.enabled: false
# Set timezone used for custom notification service.
studio.notification.v2.timezone: UTC

##########################################################
##                   Workflow Service                   ##
##########################################################
# Turn on/off (value true/false) publishing without dependencies.
# When turned on workflow service does not perform check if deployment package includes all necessary dependencies for content that is being published.
studio.workflow.publishingWithoutDependencies.enabled: false
